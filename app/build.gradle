plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
}

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('../keystore.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    namespace 'jp.co.integrityworks.mysiminfo'
    compileSdk 34

    defaultConfig {
        applicationId "jp.co.integrityworks.mysiminfo"
        minSdkVersion 28
        targetSdkVersion 34
        versionCode 12
        versionName "1.5.0"
    }

    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }

    buildTypes {
        debug {
            manifestPlaceholders = [admob_app_id: project.property("admobAppIdSample")]
            buildConfigField("String", "admob_app_id", "\"{$admobAppIdSample}\"")
            resValue "string", "ad_unit_id", "$admobBannerSample"
        }
        release {
            signingConfig signingConfigs.release
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            manifestPlaceholders = [admob_app_id: project.property("admobAppIdSimInfo")]
            buildConfigField("String", "admob_app_id", "\"{$admobAppIdSimInfo}\"")
            resValue "string", "ad_unit_id", "$admobUBannerSimInfo"
        }
    }

    flavorDimensions "default"
    productFlavors {
        development {
            dimension "default"
            applicationIdSuffix ".dev"
            versionNameSuffix ".dev"
        }
        staging {
            dimension "default"
            applicationIdSuffix ".stg"
            versionNameSuffix ".stg"
        }
        production {
            dimension "default"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        dataBinding true
        viewBinding true
    }

    // Test周り
    sourceSets {
        test.java.srcDirs += 'src/test/java'
        androidTest.java.srcDirs += 'src/androidTest/java'
    }

    testOptions {
        unitTests {
            includeAndroidResources true
            returnDefaultValues true
            all {
                jacoco {
                    includeNoLocationClasses true
                }
            }
        }
    }
}

dependencies {
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.9.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.6.1'
    implementation 'androidx.fragment:fragment-ktx:1.6.1'
    implementation 'androidx.work:work-runtime-ktx:2.9.0-alpha02'

    // AdMob
    implementation 'com.google.android.gms:play-services-ads:22.3.0'

    // Test周り
    testImplementation 'androidx.test:core:1.5.0'
    testImplementation 'androidx.test:runner:1.5.2'
    testImplementation 'androidx.test:rules:1.5.0'
    testImplementation 'androidx.test.ext:junit:1.1.5'
    testImplementation 'androidx.test.ext:truth:1.5.0'
    testImplementation 'com.google.truth:truth:1.1.5'
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.robolectric:robolectric:4.10.3'
}
//jacoco {
//    toolVersion = "0.8.4"
//}
//tasks.withType(Test) {
//    jacoco.includeNoLocationClasses = true
//}